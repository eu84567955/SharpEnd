using System.Collections.Generic;

namespace SharpEnd.Neckson
{
    struct QuestDemand
    {
        int nCharInfoOrder;
        int nWorldMin;
        int nWorldMax;
        int nTamingMobLevelMin;
        int nTamingMobLevelMax;
        int nPetTamenessMin;
        int nPetTamenessMax;
        uint dwNpcTemplateID;
        uint dwLevelMin;
        uint dwLevelMax;
        int nPop;
        int nRepeatInterval;
        uint nEndMeso;
        ulong ftStart;
        ulong ftEnd;
        List<long> lDayOfWeek;
        string[] aInfo;
        long[] aInfoCond;
        string[] aInfo_CondContent;
        string[] aInfo_ExVariable;
        long[] aInfo_Order;
        uint nInfoNumber;
        long[] aJob;
        uint dwSubJobFlags;
        QuestRecord[] aPrecedeQuest;
        ItemInfo[] aDemandItem;
        MobInfo[] aDemandMob;
        //SkillInfo[] aDemandSkill;
        //ZMap<long, int, long> mDemandPet;
        string sStartScript;
        string sEndScript;
        long[] aEquipAllNeed;
        long[] aEquipSelectNeed;
        long[] aFieldEnter;
        int bRepeatDayByDay;
        int bRepeatWeekly;
        int nRepeatDayN;
        int bRepeatable;
        int nMonsterBookMin;
        int nMonsterBookMax;
        MBCardInfo[] aDemandMBCard;
        int nMorphTemplateID;
        long[] aBuffItemID;
        long[] aExceptBuffItemID;
        int bPremium;
        int bDressChanged;
        int nCharismaMin;
        int nCharismaMax;
        int nInsightMin;
        int nInsightMax;
        int nWillMin;
        int nWillMax;
        int nCraftMin;
        int nCraftMax;
        int nSenseMin;
        int nSenseMax;
        int nCharmMin;
        int nCharmMax;
        int nPvPGradeMin;
        int nPvPGradeMax;
        int nStartVIPGradeMin;
        int nStartVIPGradeMax;
        int nCashItemPurchasePeriodAbove;
        int nCashItemPurchasePeriodBelow;
        int bStartVIPAccount;
        bool bNotInTeleportItemLimitedField;
        int bMarriaged;
        int bNoMarriaged;
        int bScenarioQuest;
        int nPartyQuest_S;
        int nPopularity;
        int nQuestComplete;
        int nLevel;
        TimeKeepInfo[] pTimeKeepInfo;
        int nCharisma;
        int nInsight;
        int nWill;
        int nCraft;
        int nSense;
        int nCharm;
        int nPvPGrade;
        int nCompleteVIPGradeMin;
        int nCompleteVIPGradeMax;
        int bCompleteVIPAccount;
        bool bQuestRecordAndOption;
        bool bQuestOrOption;
        bool bItemOrOption;
        bool bLvOptinumMob;
        int nDeathCount;
        int nMatchingExp;
        int nRandomGroupHost;
        int nMultiKill;
        int nMultiKillCount;
        int nComboKill;
        int nDamageOnFalling;
        int nHpRate;
        int nToadCount;
        int bPersonalShopBuy;
        int nMobDropMesoPickup;
        int nBreakTimeField;
        int nRuneAct;
        int nDailyCommitment;
        NxInfo[] aNxInfoAnd;
        NxInfo[] aNxInfoOr;
        NxInfo[] aNxInfoNoneAnd;
        NxInfo[] aNxInfoNoneOr;
        WSRInfo[] aWSRInfoAnd;
        WSRInfo[] aWSRInfoOr;
        WSRInfo[] aWSRInfoNoneAnd;
        WSRInfo[] aWSRInfoNoneOr;
        int nGender;
        long[] aSkinSelectNeed;
        char nCharacterCheckType;
        int bCharacterORCheck;
        CharacterCheckInfo[] aCharacterCheckInfo;
        NpcSpeech[] aNpcSpeech;
        bool bCompleteNpcAutoGuide;
    };
}
